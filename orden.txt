El mejor orden, para mi para lograrlo es:

-Inicio creando la base de datos con pgadmin.

-creo los modelos, veo que datos me piden, entro a la api desde el navegador, 
y veo que tipo de dato es cada uno y en que lugar se encuentran (estan directamente desde el primer llamado?, Estan en un array? En una propiedad de un objeto?)

-uso la propiedad DataType para asignar el tipo de dato que será ese dato del modelo.

-Una vez arme mis modelos, voy a db.js, y creo la relación; 
¿Pertenece 1 a varios, 1 a 1, varios a varios?

-despues veo que quiero hacer, creo un middleware o directamente las rutas 
(armar un middleware facilita todas las funciones en las rutas)

-Una vez termine de hacer eso, me tomo un cafe y 15 minutos para descansar la cabeza

-Vuelvo y sigo, ahora toca revisar que el back ande y que la base de datos cree las tablas. 
Abro mi consola (es preferible bash) y coloco nom start, que sucede? Se queda diciendo escuchando al puerto? 
En ese caso si no salto errores, voy a localhost:(puerto por defecto 3001 si no lo cambié)/(alguna ruta que cree con los GET)

-Si veo que me carga las rutas y me da la información que quiero, entonces terminé mi back y base de datos exitosamente.

-Una vez terminado voy al front(cliente), primero, reviso que tenga llamados en mi apikey(en caso de que tenga una, 
el proyecto de pokemon no posee, por ejemplo, asi que tiene llamados infinitos), una vez compruebo eso, veo si 
tengo la store creada, si no la creo(es facil de crear, busco en cualquier tema del modulo 2 que tenga un store y lo copio y pego)

-Continuo, ahora toca pensar como organizar, es preferible crear tantas carpetas como se considere para organizar 
bien(carpeta para components, carpeta para reducers, carpeta para filter(opcional), carpeta de paginas, carpeta de imagenes(opcional), etc)

-Una vez organizado, empiezo a entrar a cada carpeta, si lo deseo armo sub-carpetas, y una vez termine, arranco 
a crear cada archivo(es indistinto por cual arranco)

-Una vez creado los archivos, uso npm start en el cliente, y empiezo a ver mi página, hace lo que quiero? O algo no anda bien?

-resuelvo todo lo que pueda de errores que vea.

-por último, viene el estilo, totalmente personal. 
Si no recuerdo como usarlo reveo la clase css del m2.

Por último, recordar que se puede buscar información en internet y TODO PI esta en internet subido, puedo ojear para guiarme.